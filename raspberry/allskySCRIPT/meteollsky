#!/bin/sh
# le nom du service
SERVICE_NAME=Meteollsky
# le répertoire où se trouvent les exécutables du service
SERVICE_DIRECTORY=/opt/Sadr/bin
# le nom du script de démarrage du service
SERVICE_STARTUP_SCRIPT=startMETEOLLSKY.sh
# le nom du script d'arrêt du service
SERVICE_SHUTDOWN_SCRIPT=stopMETEOLLSKY.sh
usage()
{
        echo "-----------------------"
        echo "Usage: $0 (stop|start|restart)"
        echo "-----------------------"
}
if [ -z $1 ]; then
        usage
fi
service_start()
{
        echo "Starting service '${SERVICE_NAME}'..."
        OWD=`pwd`
        cd ${SERVICE_DIRECTORY} && ./${SERVICE_STARTUP_SCRIPT}
        cd $OWD
        echo "Service '${SERVICE_NAME}' started successfully"
}
service_stop()
{
        echo "Stopping service '${SERVICE_NAME}'..."
        OWD=`pwd`
        cd ${SERVICE_DIRECTORY} && ./${SERVICE_SHUTDOWN_SCRIPT}
        cd $OWD
        echo "Service '${SERVICE_NAME}' stopped"
}
case $1 in
        stop)
                service_stop
        ;;
        start)
                service_start
        ;;
        restart)
                service_stop
                service_start
        ;;
        *)
                usage
esac
exit 0


#!/bin/sh
# kFreeBSD do not accept scripts as interpreters, using #!/bin/sh and sourcing.
if [ true != "$INIT_D_SCRIPT_SOURCED" ] ; then
    set "$0" "$@"; INIT_D_SCRIPT_SOURCED=true . /lib/init/init-d-script
fi
### BEGIN INIT INFO
# Provides:          skeleton
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Example initscript
# Description:       This file should be used to construct scripts to be
#                    placed in /etc/init.d.  This example start a
#                    single forking daemon capable of writing a pid
#                    file.  To get other behavoirs, implemend
#                    do_start(), do_stop() or other functions to
#                    override the defaults in /lib/init/init-d-script.
### END INIT INFO

# Author: Foo Bar <foobar@baz.org>
#
# Please remove the "Author" lines above and replace them
# with your own name if you copy and modify this script.

DESC="Description of the service"
DAEMON=/usr/sbin/daemonexecutablename







#!/bin/sh

### BEGIN INIT INFO
# Provides:          hddtemp
# Required-Start:    $remote_fs $syslog $network
# Required-Stop:     $remote_fs $syslog $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: disk temperature monitoring daemon
# Description:       hddtemp is a disk temperature monitoring daemon
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
NAME=hddtemp
DAEMON=/usr/sbin/$NAME
DESC="disk temperature monitoring daemon"

DISKS="/dev/hd[a-z] /dev/hd[a-z][a-z]"
DISKS="$DISKS /dev/sd[a-z] /dev/sd[a-z][a-z]"
DISKS="$DISKS /dev/sr[a-z] /dev/sr[a-z][a-z]"
INTERFACE="0.0.0.0"
PORT="7634"
SEPARATOR="|"
RUN_SYSLOG="0"

# Reads config file (will override defaults above)
[ -r /etc/default/hddtemp ] && . /etc/default/hddtemp

if [ -n "$RUN_SYSLOG" ] && [ "$RUN_SYSLOG" != "0" ] ; then
  SYSLOG_ARG="-S $RUN_SYSLOG"
fi

if [ "$RUN_DAEMON" = "true" ] || [ "$RUN_DAEMON" = "yes" ] ; then
  DAEMON_ARG="-d -l $INTERFACE -p $PORT -s $SEPARATOR"
fi

[ -x "$DAEMON" ] || exit 0

. /lib/lsb/init-functions

case "$1" in
  start)
    # master switch
    if [ -n "$DAEMON_ARG" ] || [ -n "$SYSLOG_ARG" ] ; then
      log_daemon_msg "Starting $DESC" "$NAME:"
      CDROMS_LIST=$(sed -ne 's/^drive name:\t\+\(.*\)$/ \/dev\/\1/p' /proc/sys/dev/cdrom/info 2>/dev/null) || :
      CDROMS_LIST="$CDROMS_LIST $(grep -sl '^ide-scsi ' /proc/ide/hd*/driver | awk -F / '{ print "/dev/"$4 }')"
      for disk in $DISKS ; do
        echo $CDROMS_LIST | grep -wq $disk && continue
        echo $DISKS_NOPROBE | grep -wq $disk && continue
        if $DAEMON -wn $OPTIONS $disk 2>/dev/null | grep -q '^[0-9]\+$' ; then
          DISKS_LIST="$DISKS_LIST $disk";
        fi
      done
      if [ -n "$DISKS_LIST" ] || [ -n "$DISKS_NOPROBE" ] ; then
        start-stop-daemon --start --quiet --exec $DAEMON -- $DAEMON_ARG $SYSLOG_ARG $OPTIONS $DISKS_NOPROBE $DISKS_LIST
        ret=$?
        log_progress_msg "$DISKS_NOPROBE$DISKS_LIST"
        log_end_msg $ret
      else
        log_progress_msg "no disks with monitoring capability were found."
        log_end_msg 0
      fi
    fi
    ;;
  stop)
    # master switch
    if [ "$RUN_DAEMON" = "true" ] || [ "$RUN_DAEMON" = "yes" ] || [ "$RUN_SYSLOG" != "0" ] ; then
      log_daemon_msg "Stopping $DESC" "$NAME"
      start-stop-daemon --stop --oknodo --exec $DAEMON --retry 30
      log_end_msg $?
    fi
    ;;
  force-reload|reload)
    exit 3
    ;;
  restart)
    $0 stop && $0 start
    ;;
  status)
    status_of_proc $DAEMON $NAME
    exit $?
    ;;
  *)
    echo "Usage: /etc/init.d/$NAME {start|stop|restart|status}" >&2
    exit 1
    ;;
esac

exit 0
